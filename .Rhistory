equal_clust = FALSE)
# Gather the data
sim_dat2 <- sim_data2$`Simulated Data`
clusters2 <- sim_data2$`Cluster ID per participant per group`
groups2 <- sim_data2$`Group ID`
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 3
n_clust <- 3
N_col <- 33
n_indiv <- 923
timepoints <- c(12.7, 20.4, 28.3, 36.2)
timepoints_sd  <- c(0.842, 0.485, 0.419, 0.394)
seed <- 4881
subj_data <- data.frame(SubjectID = rep(1:100, each = 4),
Time = unlist(replicate(100, c(12, 20, 28, 36) +
rnorm(4, mean = 0,
sd = c(0.842, 0.485, 0.419, 0.394)),
simplify = FALSE)),
GA = rep(c(12, 20, 28, 36), times = 4))
# Generate data
sim_data2 <- simulateLCMM(subject_data = subj_data, ID = NULL, timepoints = NULL, n_clust, n_groups, params,
100, n_col = N_col, 4881, cluster_labels = NULL,
equal_clust = FALSE)
# Gather the data
sim_dat2 <- sim_data2$`Simulated Data`
clusters2 <- sim_data2$`Cluster ID per participant per group`
groups2 <- sim_data2$`Group ID`
name <- paste0("Group", non_permute_group_num)
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 3
n_clust <- 3
N_col <- 33
n_indiv <- 923
timepoints <- c(12.7, 20.4, 28.3, 36.2)
timepoints_sd  <- c(0.842, 0.485, 0.419, 0.394)
seed <- 4881
name <- paste0("Group", non_permute_group_num)
subj_data <- data.frame(SubjectID = rep(1:100, each = 4),
Time = unlist(replicate(100, c(12, 20, 28, 36) +
rnorm(4, mean = 0,
sd = c(0.842, 0.485, 0.419, 0.394)),
simplify = FALSE)),
GA = rep(c(12, 20, 28, 36), times = 4))
# Generate data
sim_data2 <- simulateLCMM(subject_data = subj_data, ID = NULL, timepoints = NULL, n_clust, n_groups, params,
100, n_col = N_col, 4881, cluster_labels = NULL,
equal_clust = FALSE)
?arrange
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 3
n_clust <- 3
N_col <- 33
n_indiv <- 923
timepoints <- c(12.7, 20.4, 28.3, 36.2)
timepoints_sd  <- c(0.842, 0.485, 0.419, 0.394)
seed <- 4881
subj_data <- data.frame(SubjectID = rep(1:100, each = 4),
Time = unlist(replicate(100, c(12, 20, 28, 36) +
rnorm(4, mean = 0,
sd = c(0.842, 0.485, 0.419, 0.394)),
simplify = FALSE)),
GA = rep(c(12, 20, 28, 36), times = 4))
# Generate data
sim_data2 <- simulateLCMM(subject_data = subj_data, ID = NULL, timepoints = NULL, n_clust, n_groups, params,
100, n_col = N_col, 4881, cluster_labels = NULL,
equal_clust = FALSE)
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 3
n_clust <- 3
N_col <- 33
n_indiv <- 923
timepoints <- c(12.7, 20.4, 28.3, 36.2)
timepoints_sd  <- c(0.842, 0.485, 0.419, 0.394)
seed <- 4881
subj_data <- data.frame(SubjectID = rep(1:100, each = 4),
Time = unlist(replicate(100, c(12, 20, 28, 36) +
rnorm(4, mean = 0,
sd = c(0.842, 0.485, 0.419, 0.394)),
simplify = FALSE)),
GA = rep(c(12, 20, 28, 36), times = 4))
# Generate data
sim_data2 <- simulateLCMM(subject_data = subj_data, ID = NULL, timepoints = NULL, n_clust, n_groups, params,
100, n_col = N_col, 4881, cluster_labels = NULL,
equal_clust = FALSE)
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 3
n_clust <- 3
N_col <- 33
n_indiv <- 923
timepoints <- c(12.7, 20.4, 28.3, 36.2)
timepoints_sd  <- c(0.842, 0.485, 0.419, 0.394)
seed <- 4881
subj_data <- data.frame(SubjectID = rep(1:100, each = 4),
Time = unlist(replicate(100, c(12, 20, 28, 36) +
rnorm(4, mean = 0,
sd = c(0.842, 0.485, 0.419, 0.394)),
simplify = FALSE)),
GA = rep(c(12, 20, 28, 36), times = 4))
# Generate data
sim_data2 <- simulateLCMM(subject_data = subj_data, ID = NULL, timepoints = NULL, n_clust, n_groups, params,
100, n_col = N_col, 4881, cluster_labels = NULL,
equal_clust = FALSE)
# Gather the data
sim_dat2 <- sim_data2$`Simulated Data`
clusters2 <- sim_data2$`Cluster ID per participant per group`
groups2 <- sim_data2$`Group ID`
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 3
n_clust <- 3
N_col <- 33
n_indiv <- 923
timepoints <- c(12.7, 20.4, 28.3, 36.2)
timepoints_sd  <- c(0.842, 0.485, 0.419, 0.394)
seed <- 4881
subj_data <- data.frame(SubjectID = rep(1:100, each = 4),
Time = unlist(replicate(100, c(12, 20, 28, 36) +
rnorm(4, mean = 0,
sd = c(0.842, 0.485, 0.419, 0.394)),
simplify = FALSE)),
GA = rep(c(12, 20, 28, 36), times = 4))
# Generate data
sim_data2 <- simulateLCMM(subject_data = subj_data, ID = NULL, timepoints = NULL, n_clust, n_groups, params,
100, n_col = N_col, 4881, cluster_labels = NULL,
equal_clust = FALSE)
# Gather the data
sim_dat2 <- sim_data2$`Simulated Data`
clusters2 <- sim_data2$`Cluster ID per participant per group`
groups2 <- sim_data2$`Group ID`
View(sim_data2)
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 3
n_clust <- 3
N_col <- 33
n_indiv <- 923
timepoints <- c(12.7, 20.4, 28.3, 36.2)
timepoints_sd  <- c(0.842, 0.485, 0.419, 0.394)
seed <- 4881
subj_data <- data.frame(SubjectID = rep(1:100, each = 4),
Time = unlist(replicate(100, c(12, 20, 28, 36) +
rnorm(4, mean = 0,
sd = c(0.842, 0.485, 0.419, 0.394)),
simplify = FALSE)),
GA = rep(c(12, 20, 28, 36), times = 4))
# Generate data
sim_data2 <- simulateLCMM(subject_data = subj_data, ID = NULL, timepoints = NULL, n_clust, n_groups, params,
100, n_col = N_col, 4881, cluster_labels = NULL,
equal_clust = FALSE)
# Gather the data
sim_dat2 <- sim_data2$`Simulated Data`
clusters2 <- sim_data2$`Cluster ID per participant per group`
groups2 <- sim_data2$`Group ID`
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 3
n_clust <- 3
N_col <- 33
n_indiv <- 923
timepoints <- c(12.7, 20.4, 28.3, 36.2)
timepoints_sd  <- c(0.842, 0.485, 0.419, 0.394)
seed <- 4881
subj_data <- data.frame(SubjectID = rep(1:100, each = 4),
Time = unlist(replicate(100, c(12, 20, 28, 36) +
rnorm(4, mean = 0,
sd = c(0.842, 0.485, 0.419, 0.394)),
simplify = FALSE)),
GA = rep(c(12, 20, 28, 36), times = 4))
# Generate data
sim_data2 <- simulateLCMM(subject_data = subj_data, ID = NULL, timepoints = NULL, n_clust, n_groups, params,
100, n_col = N_col, 4881, cluster_labels = NULL,
equal_clust = FALSE)
# Gather the data
sim_dat2 <- sim_data2$`Simulated Data`
clusters2 <- sim_data2$`Cluster ID per participant per group`
groups2 <- sim_data2$`Group ID`
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 3
n_clust <- 3
N_col <- 33
n_indiv <- 923
timepoints <- c(12.7, 20.4, 28.3, 36.2)
timepoints_sd  <- c(0.842, 0.485, 0.419, 0.394)
seed <- 4881
subj_data <- data.frame(SubjectID = rep(1:100, each = 4),
Time = unlist(replicate(100, c(12, 20, 28, 36) +
rnorm(4, mean = 0,
sd = c(0.842, 0.485, 0.419, 0.394)),
simplify = FALSE)),
GA = rep(c(12, 20, 28, 36), times = 4))
# Generate data
sim_data2 <- simulateLCMM(subject_data = subj_data, ID = NULL, timepoints = NULL, n_clust, n_groups, params,
100, n_col = N_col, 4881, cluster_labels = NULL,
equal_clust = FALSE)
# Gather the data
sim_dat2 <- sim_data2$`Simulated Data`
clusters2 <- sim_data2$`Cluster ID per participant per group`
groups2 <- sim_data2$`Group ID`
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 3
n_clust <- 3
N_col <- 33
n_indiv <- 923
timepoints <- c(12.7, 20.4, 28.3, 36.2)
timepoints_sd  <- c(0.842, 0.485, 0.419, 0.394)
seed <- 4881
subj_data <- data.frame(SubjectID = rep(1:100, each = 4),
Time = unlist(replicate(100, c(12, 20, 28, 36) +
rnorm(4, mean = 0,
sd = c(0.842, 0.485, 0.419, 0.394)),
simplify = FALSE)),
GA = rep(c(12, 20, 28, 36), times = 4))
# Generate data
sim_data2 <- simulateLCMM(subject_data = subj_data, ID = NULL, timepoints = NULL, n_clust, n_groups, params,
100, n_col = N_col, 4881, cluster_labels = NULL,
equal_clust = FALSE)
# Gather the data
sim_dat2 <- sim_data2$`Simulated Data`
clusters2 <- sim_data2$`Cluster ID per participant per group`
groups2 <- sim_data2$`Group ID`
sim_dat2
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 3
n_clust <- 3
N_col <- 33
n_indiv <- 923
timepoints <- c(12.7, 20.4, 28.3, 36.2)
timepoints_sd  <- c(0.842, 0.485, 0.419, 0.394)
seed <- 4881
# Cluster specific params
params <- list(
cluster1 = list(
fixed_intercept = rnorm(N_col, 8, 1),
fixed_slope = runif(N_col, -0.1, 0.1),
random_intercept = runif(N_col, 0.1, 0.5),
random_slope = runif(N_col, 0.02, 0.15),
random_cov = matrix(c(mean(runif(N_col, 0.1, 0.5))^2, 0, 0, mean(runif(N_col, 0.02, 0.15))^2),
nrow = 2, byrow = TRUE),
resid_sd = runif(N_col, 0.1, 0.3)
),
cluster2 = list(
fixed_intercept = rnorm(N_col, 0, 0.75),
fixed_slope = runif(N_col, -0.1, 0.1),
random_intercept = runif(N_col, 0.15, 0.6),
random_slope = runif(N_col, 0.02, 0.08),
random_cov = matrix(c(mean(runif(N_col, 0.15, 0.6))^2, 0, 0, mean(runif(N_col, 0.02, 0.08))^2),
nrow = 2, byrow = TRUE),
resid_sd = runif(N_col, 0.15, 0.25)
),
cluster3 = list(
fixed_intercept = rnorm(N_col, -8, 0.6),
fixed_slope = runif(N_col, -0.1, 0.1),
random_intercept = runif(N_col, 0.05, 0.4),
random_slope = runif(N_col, 0.04, 0.09),
random_cov = matrix(c(mean(runif(N_col, 0.05, 0.4))^2, 0, 0, mean(runif(N_col, 0.04, 0.09))^2),
nrow = 2, byrow = TRUE),
resid_sd = runif(N_col, 0.21, 0.27)
)
)
# Generate subjects
subj_data <- data.frame(SubjectID = rep(1:100, each = 4),
Time = unlist(replicate(100, c(12, 20, 28, 36) +
rnorm(4, mean = 0,
sd = c(0.842, 0.485, 0.419, 0.394)),
simplify = FALSE)),
GA = rep(c(12, 20, 28, 36), times = 4))
# Generate data
sim_data2 <- simulateLCMM(subject_data = subj_data, ID = NULL, timepoints = NULL, n_clust, n_groups, params,
100, n_col = N_col, 4881, cluster_labels = NULL,
equal_clust = FALSE)
# Gather the data
sim_dat2 <- sim_data2$`Simulated Data`
clusters2 <- sim_data2$`Cluster ID per participant per group`
groups2 <- sim_data2$`Group ID`
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 3
n_clust <- 3
N_col <- 33
n_indiv <- 923
timepoints <- c(12.7, 20.4, 28.3, 36.2)
timepoints_sd  <- c(0.842, 0.485, 0.419, 0.394)
seed <- 4881
# Cluster specific params
params <- list(
cluster1 = list(
fixed_intercept = rnorm(N_col, 8, 1),
fixed_slope = runif(N_col, -0.1, 0.1),
random_intercept = runif(N_col, 0.1, 0.5),
random_slope = runif(N_col, 0.02, 0.15),
random_cov = matrix(c(mean(runif(N_col, 0.1, 0.5))^2, 0, 0, mean(runif(N_col, 0.02, 0.15))^2),
nrow = 2, byrow = TRUE),
resid_sd = runif(N_col, 0.1, 0.3)
),
cluster2 = list(
fixed_intercept = rnorm(N_col, 0, 0.75),
fixed_slope = runif(N_col, -0.1, 0.1),
random_intercept = runif(N_col, 0.15, 0.6),
random_slope = runif(N_col, 0.02, 0.08),
random_cov = matrix(c(mean(runif(N_col, 0.15, 0.6))^2, 0, 0, mean(runif(N_col, 0.02, 0.08))^2),
nrow = 2, byrow = TRUE),
resid_sd = runif(N_col, 0.15, 0.25)
),
cluster3 = list(
fixed_intercept = rnorm(N_col, -8, 0.6),
fixed_slope = runif(N_col, -0.1, 0.1),
random_intercept = runif(N_col, 0.05, 0.4),
random_slope = runif(N_col, 0.04, 0.09),
random_cov = matrix(c(mean(runif(N_col, 0.05, 0.4))^2, 0, 0, mean(runif(N_col, 0.04, 0.09))^2),
nrow = 2, byrow = TRUE),
resid_sd = runif(N_col, 0.21, 0.27)
)
)
# Generate subjects
subj_data <- data.frame(SubjectID = rep(1:100, each = 4),
Time = unlist(replicate(100, c(12, 20, 28, 36) +
rnorm(4, mean = 0,
sd = c(0.842, 0.485, 0.419, 0.394)),
simplify = FALSE)),
GA = rep(c(12, 20, 28, 36), times = 4))
# Generate data
sim_data2 <- simulateLCMM(subject_data = subj_data, ID = NULL, timepoints = NULL, n_clust, n_groups, params,
100, n_col = N_col, 4881, cluster_labels = NULL,
equal_clust = FALSE)
# Gather the data
sim_dat2 <- sim_data2$`Simulated Data`
clusters2 <- sim_data2$`Cluster ID per participant per group`
groups2 <- sim_data2$`Group ID`
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 3
n_clust <- 3
N_col <- 33
n_indiv <- 923
timepoints <- c(12.7, 20.4, 28.3, 36.2)
timepoints_sd  <- c(0.842, 0.485, 0.419, 0.394)
seed <- 4881
# Cluster specific params
params <- list(
cluster1 = list(
fixed_intercept = rnorm(N_col, 8, 1),
fixed_slope = runif(N_col, -0.1, 0.1),
random_intercept = runif(N_col, 0.1, 0.5),
random_slope = runif(N_col, 0.02, 0.15),
random_cov = matrix(c(mean(runif(N_col, 0.1, 0.5))^2, 0, 0, mean(runif(N_col, 0.02, 0.15))^2),
nrow = 2, byrow = TRUE),
resid_sd = runif(N_col, 0.1, 0.3)
),
cluster2 = list(
fixed_intercept = rnorm(N_col, 0, 0.75),
fixed_slope = runif(N_col, -0.1, 0.1),
random_intercept = runif(N_col, 0.15, 0.6),
random_slope = runif(N_col, 0.02, 0.08),
random_cov = matrix(c(mean(runif(N_col, 0.15, 0.6))^2, 0, 0, mean(runif(N_col, 0.02, 0.08))^2),
nrow = 2, byrow = TRUE),
resid_sd = runif(N_col, 0.15, 0.25)
),
cluster3 = list(
fixed_intercept = rnorm(N_col, -8, 0.6),
fixed_slope = runif(N_col, -0.1, 0.1),
random_intercept = runif(N_col, 0.05, 0.4),
random_slope = runif(N_col, 0.04, 0.09),
random_cov = matrix(c(mean(runif(N_col, 0.05, 0.4))^2, 0, 0, mean(runif(N_col, 0.04, 0.09))^2),
nrow = 2, byrow = TRUE),
resid_sd = runif(N_col, 0.21, 0.27)
)
)
# Generate subjects
subj_data <- data.frame(SubjectID = rep(1:100, each = 4),
Time = unlist(replicate(100, c(12, 20, 28, 36) +
rnorm(4, mean = 0,
sd = c(0.842, 0.485, 0.419, 0.394)),
simplify = FALSE)),
GA = rep(c(12, 20, 28, 36), times = 4))
# Generate data
sim_data2 <- simulateLCMM(subject_data = subj_data, ID = NULL, timepoints = NULL, n_clust, n_groups, params,
100, n_col = N_col, 4881, cluster_labels = NULL,
equal_clust = FALSE)
# Gather the data
sim_dat2 <- sim_data2$`Simulated Data`
clusters2 <- sim_data2$`Cluster ID per participant per group`
groups2 <- sim_data2$`Group ID`
View(sim_dat2)
# Test examples from the COCA package (Cabassi and Kirk (2019))
# Turn on warning messages
options(warn = 1)
# Load function
source("clusterofclusters.R")
source("simulateGMM.R")
# Load package
library(coca)
# Load data
data <- list()
data[[1]] <- as.matrix(read.csv(system.file("extdata", "dataset1.csv",
package = "coca"), row.names = 1))
data[[2]] <- as.matrix(read.csv(system.file("extdata", "dataset2.csv",
package = "coca"), row.names = 1))
data[[3]] <- as.matrix(read.csv(system.file("extdata", "dataset3.csv",
package = "coca"), row.names = 1))
true_labels <- as.matrix(read.csv(system.file("extdata", "cluster_labels.csv",
package = "coca"), row.names = 1))
# Run original COCA function
outputBuildMOC <- coca::buildMOC(data, M = 3, K = 5, distances = "cor")
moc <- outputBuildMOC$moc
example <- coca::coca(moc, K = 5)
pred_labels <- example$clusterLabels
# Run my COCA function
example_new <- clusterofclusters(data, k = 5)
pred_labels_new <- example$clusterLabels
sim_data2 <- simulateGMM(3, 2, params1, n_indiv = 419, n_col = N_col, random_seed = 4881)
## COCA test area
# Load functions
source("simulateGMM.R")
source("constructMOC.R")
source("clusterofclusters.R")
# Load packages
library(mclust)
# Create data - single clustering structure and clearly defined data
N_col <- 10
means <- list(cluster1 = -10, cluster2 = 0, cluster3 = 10)
params1 <- lapply(means, function(m) {
list(mean = rnorm(N_col, mean = m, sd = 0.5),
sd = rep(1, N_col))
})
sim_data <- simulateGMM(3, 1, params1, n_indiv = 419, n_col = N_col, random_seed = 4881)
clusters1 <- sim_data$`Cluster ID`
sim_data <- sim_data$`Simulated Data`[, 1:N_col]
outputCOCA <- clusterofclusters(sim_data, max.iter = 10000)
clusters2 <- outputCOCA$clusterLabels
adjustedRandIndex(clusters1, clusters2)
# Create data - single clustering structure and less defined data
N_col <- 10
params2 <- list(
cluster1 = list(mean = rnorm(N_col, mean = -2, sd = 1), sd = rep(2, N_col)),
cluster2 = list(mean = rnorm(N_col, mean = 0, sd = 0.5), sd = rep(2.2, N_col)),
cluster3 = list(mean = rnorm(N_col, mean = 2, sd = 0.6), sd = rep(1.5, N_col))
)
sim_data2 <- simulateGMM(3, 1, params2, n_indiv = 419, n_col = N_col, random_seed = 4881)
clusters1a <- sim_data2$`Cluster ID`
sim_data2 <- sim_data2$`Simulated Data`[, 1:N_col]
outputCOCA_2 <- clusterofclusters(sim_data2, max.iter = 10000)
clusters2a <- outputCOCA$clusterLabels
adjustedRandIndex(clusters1a, clusters2a)
# Create data - multiple clustering structures and clearly defined data
sim_data2 <- simulateGMM(3, 2, params1, n_indiv = 419, n_col = N_col, random_seed = 4881)
clusters1a <- sim_data2$`Cluster ID per individual per group`
group1a <- sim_data2$`Group ID`
sim_data2 <- sim_data2$`Simulated Data`[, 1:N_col]
moc <- constructMOC(sim_data2)
outputCOCA_2 <- clusterofclusters(sim_data2)
clusters2a <- outputCOCA_2$clusterLabels
adjustedRandIndex(clusters1a, clusters2a)
