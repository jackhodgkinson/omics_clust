geom_jitter(width = 0.001, height = 0.001) +
labs(
x = "MDS1",
y = "MDS2",
title = "Multi-dimensional Scaling (MDS) plot of the ARI dissimilarity matrix"
) +
coord_cartesian()
ggplot(mds_plot, aes(x = V1, y = V2)) +
geom_point(position = position_jitter(width = 1e-4, height = 1e-4)) +
labs(
x = "MDS1",
y = "MDS2",
title = "Multi-dimensional Scaling (MDS) plot of the ARI dissimilarity matrix"
) +
coord_cartesian()
View(mds)
mds_plot <- ggplot(mds_plot_data, aes(x = V1, y = V2)) +
geom_point() +
labs(
x = "MDS1",
y = "MDS2",
title = "Multi-dimensional Scaling (MDS) plot of the ARI dissimilarity matrix"
)
mds_plot_data <- as.data.frame(mds)
mds_plot <- ggplot(mds_plot_data, aes(x = V1, y = V2)) +
geom_point() +
labs(
x = "MDS1",
y = "MDS2",
title = "Multi-dimensional Scaling (MDS) plot of the ARI dissimilarity matrix"
)
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 2
n_clust <- 3
N_col <- 25
n_indiv <- 448
timepoints <- c(12, 20, 28, 36)
# Cluster specific params
params <- list(
cluster1 = list(
fixed_intercept = rnorm(N_col, 8, 1),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.1, 0.5),
random_slope = runif(N_col, 0.02, 0.15),
random_cov = NULL,
resid_sd = runif(N_col, 0.01, 0.1)
),
cluster2 = list(
fixed_intercept = rnorm(N_col, 0, 0.75),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.15, 0.6),
random_slope = runif(N_col, 0.02, 0.08),
random_cov = NULL,
resid_sd = runif(N_col, 0.05, 0.15)
),
cluster3 = list(
fixed_intercept = rnorm(N_col, -8, 0.6),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.05, 0.4),
random_slope = runif(N_col, 0.04, 0.09),
random_cov = NULL,
resid_sd = runif(N_col, 0.01, 0.17)
)
)
# Test params
cluster_labels <- NULL
equal_clust <- FALSE
seed <- 4881
# Generate data
sim_dat <- simulateLCMM(subject_data = NULL, c(12, 20., 28, 36), 2, 1, params, 419, 15, seed, cluster_labels, equal_clust)
# simulateLCMM-test.R
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 2
n_clust <- 3
N_col <- 25
n_indiv <- 448
timepoints <- c(12, 20, 28, 36)
# Cluster specific params
params <- list(
cluster1 = list(
fixed_intercept = rnorm(N_col, 8, 1),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.1, 0.5),
random_slope = runif(N_col, 0.02, 0.15),
random_cov = NULL,
resid_sd = runif(N_col, 0.01, 0.1)
),
cluster2 = list(
fixed_intercept = rnorm(N_col, 0, 0.75),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.15, 0.6),
random_slope = runif(N_col, 0.02, 0.08),
random_cov = NULL,
resid_sd = runif(N_col, 0.05, 0.15)
),
cluster3 = list(
fixed_intercept = rnorm(N_col, -8, 0.6),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.05, 0.4),
random_slope = runif(N_col, 0.04, 0.09),
random_cov = NULL,
resid_sd = runif(N_col, 0.01, 0.17)
)
)
# Test params
cluster_labels <- NULL
equal_clust <- FALSE
seed <- 4881
# Generate data
sim_dat <- simulateLCMM(subject_data = NULL, c(12, 20., 28, 36), 2, 1, params,
419, 15, seed, missing = FALSE, cluster_labels, equal_clust)
# simulateLCMM-test.R
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 2
n_clust <- 3
N_col <- 25
n_indiv <- 448
timepoints <- c(12, 20, 28, 36)
# Cluster specific params
params <- list(
cluster1 = list(
fixed_intercept = rnorm(N_col, 8, 1),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.1, 0.5),
random_slope = runif(N_col, 0.02, 0.15),
random_cov = NULL,
resid_sd = runif(N_col, 0.01, 0.1)
),
cluster2 = list(
fixed_intercept = rnorm(N_col, 0, 0.75),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.15, 0.6),
random_slope = runif(N_col, 0.02, 0.08),
random_cov = NULL,
resid_sd = runif(N_col, 0.05, 0.15)
),
cluster3 = list(
fixed_intercept = rnorm(N_col, -8, 0.6),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.05, 0.4),
random_slope = runif(N_col, 0.04, 0.09),
random_cov = NULL,
resid_sd = runif(N_col, 0.01, 0.17)
)
)
# Test params
cluster_labels <- NULL
equal_clust <- FALSE
seed <- 4881
# Generate data
sim_dat <- simulateLCMM(subject_data = NULL, timepoints, n_clust, n_groups, params,
n_indiv, N_col, seed, missing = FALSE, cluster_labels, equal_clust)
# simulateLCMM-test.R
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 2
n_clust <- 3
N_col <- 25
n_indiv <- 448
timepoints <- c(12, 20, 28, 36)
# Cluster specific params
params <- list(
cluster1 = list(
fixed_intercept = rnorm(N_col, 8, 1),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.1, 0.5),
random_slope = runif(N_col, 0.02, 0.15),
random_cov = NULL,
resid_sd = runif(N_col, 0.01, 0.1)
),
cluster2 = list(
fixed_intercept = rnorm(N_col, 0, 0.75),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.15, 0.6),
random_slope = runif(N_col, 0.02, 0.08),
random_cov = NULL,
resid_sd = runif(N_col, 0.05, 0.15)
),
cluster3 = list(
fixed_intercept = rnorm(N_col, -8, 0.6),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.05, 0.4),
random_slope = runif(N_col, 0.04, 0.09),
random_cov = NULL,
resid_sd = runif(N_col, 0.01, 0.17)
)
)
# Generate data
sim_dat <- simulateLCMM(subject_data = NULL, timepoints, n_clust, n_groups, params,
n_indiv, N_col, seed, missing = FALSE, cluster_labels = NULL,
equal_clust = FALSE)
# simulateLCMM-test.R
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 2
n_clust <- 3
N_col <- 25
n_indiv <- 448
timepoints <- c(12, 20, 28, 36)
# Cluster specific params
params <- list(
cluster1 = list(
fixed_intercept = rnorm(N_col, 8, 1),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.1, 0.5),
random_slope = runif(N_col, 0.02, 0.15),
random_cov = NULL,
resid_sd = runif(N_col, 0.01, 0.1)
),
cluster2 = list(
fixed_intercept = rnorm(N_col, 0, 0.75),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.15, 0.6),
random_slope = runif(N_col, 0.02, 0.08),
random_cov = NULL,
resid_sd = runif(N_col, 0.05, 0.15)
),
cluster3 = list(
fixed_intercept = rnorm(N_col, -8, 0.6),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.05, 0.4),
random_slope = runif(N_col, 0.04, 0.09),
random_cov = NULL,
resid_sd = runif(N_col, 0.01, 0.17)
)
)
# Generate data
sim_dat <- simulateLCMM(subject_data = NULL, timepoints, n_clust, n_groups, params,
n_indiv, n_col = N_col, seed, missing = FALSE, cluster_labels = NULL,
equal_clust = FALSE)
# simulateLCMM-test.R
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 2
n_clust <- 3
N_col <- 25
n_indiv <- 448
timepoints <- c(12, 20, 28, 36)
# Cluster specific params
params <- list(
cluster1 = list(
fixed_intercept = rnorm(N_col, 8, 1),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.1, 0.5),
random_slope = runif(N_col, 0.02, 0.15),
random_cov = NULL,
resid_sd = runif(N_col, 0.01, 0.1)
),
cluster2 = list(
fixed_intercept = rnorm(N_col, 0, 0.75),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.15, 0.6),
random_slope = runif(N_col, 0.02, 0.08),
random_cov = NULL,
resid_sd = runif(N_col, 0.05, 0.15)
),
cluster3 = list(
fixed_intercept = rnorm(N_col, -8, 0.6),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.05, 0.4),
random_slope = runif(N_col, 0.04, 0.09),
random_cov = NULL,
resid_sd = runif(N_col, 0.01, 0.17)
)
)
# Generate data
sim_dat <- simulateLCMM(subject_data = NULL, timepoints, n_clust, n_groups, params,
n_indiv, n_col = N_col, seed, missing = FALSE, cluster_labels = NULL,
equal_clust = FALSE)
# simulateLCMM-test.R
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 2
n_clust <- 3
N_col <- 25
n_indiv <- 448
timepoints <- c(12, 20, 28, 36)
# Cluster specific params
params <- list(
cluster1 = list(
fixed_intercept = rnorm(N_col, 8, 1),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.1, 0.5),
random_slope = runif(N_col, 0.02, 0.15),
random_cov = NULL,
resid_sd = runif(N_col, 0.01, 0.1)
),
cluster2 = list(
fixed_intercept = rnorm(N_col, 0, 0.75),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.15, 0.6),
random_slope = runif(N_col, 0.02, 0.08),
random_cov = NULL,
resid_sd = runif(N_col, 0.05, 0.15)
),
cluster3 = list(
fixed_intercept = rnorm(N_col, -8, 0.6),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.05, 0.4),
random_slope = runif(N_col, 0.04, 0.09),
random_cov = NULL,
resid_sd = runif(N_col, 0.01, 0.17)
)
)
# Generate data
sim_dat <- simulateLCMM(subject_data = NULL, timepoints, n_clust, n_groups, params,
n_indiv, n_col = N_col, seed, missing = FALSE, cluster_labels = NULL,
equal_clust = FALSE)
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 2
n_clust <- 3
N_col <- 25
n_indiv <- 448
timepoints <- c(12, 20, 28, 36)
# Cluster specific params
params <- list(
cluster1 = list(
fixed_intercept = rnorm(N_col, 8, 1),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.1, 0.5),
random_slope = runif(N_col, 0.02, 0.15),
random_cov = matrix(c(mean(random_intercept)^2, 0, 0, mean(random_slope)^2),
nrow = 2, byrow = TRUE),
resid_sd = runif(N_col, 0.01, 0.1)
),
cluster2 = list(
fixed_intercept = rnorm(N_col, 0, 0.75),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.15, 0.6),
random_slope = runif(N_col, 0.02, 0.08),
random_cov = matrix(c(mean(random_intercept)^2, 0, 0, mean(random_slope)^2),
nrow = 2, byrow = TRUE),
resid_sd = runif(N_col, 0.05, 0.15)
),
cluster3 = list(
fixed_intercept = rnorm(N_col, -8, 0.6),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.05, 0.4),
random_slope = runif(N_col, 0.04, 0.09),
random_cov = matrix(c(mean(random_intercept)^2, 0, 0, mean(random_slope)^2),
nrow = 2, byrow = TRUE),
resid_sd = runif(N_col, 0.01, 0.17)
)
)
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 2
n_clust <- 3
N_col <- 25
n_indiv <- 448
timepoints <- c(12, 20, 28, 36)
# Cluster specific params
params <- list(
cluster1 = list(
fixed_intercept = rnorm(N_col, 8, 1),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.1, 0.5),
random_slope = runif(N_col, 0.02, 0.15),
random_cov = matrix(c(mean(runif(N_col, 0.1, 0.5))^2, 0, 0, mean(runif(N_col, 0.02, 0.15))^2),
nrow = 2, byrow = TRUE),
resid_sd = runif(N_col, 0.01, 0.1)
),
cluster2 = list(
fixed_intercept = rnorm(N_col, 0, 0.75),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.15, 0.6),
random_slope = runif(N_col, 0.02, 0.08),
random_cov = matrix(c(mean(runif(N_col, 0.15, 0.6))^2, 0, 0, mean(runif(N_col, 0.02, 0.08))^2),
nrow = 2, byrow = TRUE),
resid_sd = runif(N_col, 0.05, 0.15)
),
cluster3 = list(
fixed_intercept = rnorm(N_col, -8, 0.6),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.05, 0.4),
random_slope = runif(N_col, 0.04, 0.09),
random_cov = matrix(c(mean(runif(N_col, 0.05, 0.4))^2, 0, 0, mean(runif(N_col, 0.04, 0.09))^2),
nrow = 2, byrow = TRUE),
resid_sd = runif(N_col, 0.01, 0.17)
)
)
# Generate data
sim_dat <- simulateLCMM(subject_data = NULL, timepoints, n_clust, n_groups, params,
n_indiv, n_col = N_col, seed, missing = FALSE, cluster_labels = NULL,
equal_clust = FALSE)
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# Initialise parameters
n_groups <- 2
n_clust <- 3
N_col <- 25
n_indiv <- 448
timepoints <- c(12, 20, 28, 36)
seed <- 4881
# Cluster specific params
params <- list(
cluster1 = list(
fixed_intercept = rnorm(N_col, 8, 1),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.1, 0.5),
random_slope = runif(N_col, 0.02, 0.15),
random_cov = matrix(c(mean(runif(N_col, 0.1, 0.5))^2, 0, 0, mean(runif(N_col, 0.02, 0.15))^2),
nrow = 2, byrow = TRUE),
resid_sd = runif(N_col, 0.01, 0.1)
),
cluster2 = list(
fixed_intercept = rnorm(N_col, 0, 0.75),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.15, 0.6),
random_slope = runif(N_col, 0.02, 0.08),
random_cov = matrix(c(mean(runif(N_col, 0.15, 0.6))^2, 0, 0, mean(runif(N_col, 0.02, 0.08))^2),
nrow = 2, byrow = TRUE),
resid_sd = runif(N_col, 0.05, 0.15)
),
cluster3 = list(
fixed_intercept = rnorm(N_col, -8, 0.6),
fixed_slope = NULL,
random_intercept = runif(N_col, 0.05, 0.4),
random_slope = runif(N_col, 0.04, 0.09),
random_cov = matrix(c(mean(runif(N_col, 0.05, 0.4))^2, 0, 0, mean(runif(N_col, 0.04, 0.09))^2),
nrow = 2, byrow = TRUE),
resid_sd = runif(N_col, 0.01, 0.17)
)
)
# Generate data
sim_dat <- simulateLCMM(subject_data = NULL, timepoints, n_clust, n_groups, params,
n_indiv, n_col = N_col, seed, missing = FALSE, cluster_labels = NULL,
equal_clust = FALSE)
# simulateLCMM-test.R
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
# simulateLCMM-test.R
# Load libraries
library(tidyverse)
# Load functions
source("simulateLCMM.R")
